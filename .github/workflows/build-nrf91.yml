name: Build and publish nRF91 1NCE Demos

on:
  release:
    types: [created]

env:
  NCS_VERSION: v2.8.0
  NCE_REVISION: main
  ZEPHYR_TOOLCHAIN_VARIANT: zephyr
  ZEPHYR_SDK_INSTALL_DIR: /home/runner/ncs/toolchains/b81a7cd864/opt/zephyr-sdk

jobs:
  build:
    runs-on: ubuntu-22.04
    container:
      image: mtalatcise/nce-nrf:v2.8.0
      options: --workdir /workdir/nce
    defaults:
      run:
        working-directory: /workdir/nce
    strategy:
      matrix:
        board: [thingy91/nrf9160]
        demo: [nce_udp_demo, plugin_system/nce_debug_memfault_demo]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: /workdir/nce

      - name: Build firmware
        run: |
          cd blueprint-zephyr

          DEMO="${{ matrix.demo }}"
          BOARD="${{ matrix.board }}"
          BOARD_SAFE=$(echo "$BOARD" | tr '/' '_')
          BUILD_DIR="/workdir/nce/build_${DEMO}_${BOARD_SAFE}"
          ARTIFACT_DIR="/workdir/artifacts/${BOARD_SAFE}/${DEMO}"

          mkdir -p "$ARTIFACT_DIR"

          echo "Building $DEMO for $BOARD"
          west build --build-dir "$BUILD_DIR" "$DEMO" -b "$BOARD/ns" -- -DNCS_TOOLCHAIN_VERSION=NONE -DCONF_FILE="prj.conf"

          echo "Copying binary to artifacts"
          cp "${BUILD_DIR}/${DEMO}/zephyr/zephyr.bin" "$ARTIFACT_DIR/"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ matrix.board }}-${{ matrix.demo }}
          path: /workdir/artifacts/${BOARD_SAFE}/${DEMO}

  zip-and-release:
    needs: build
    runs-on: ubuntu-22.04
    container:
      image: mtalatcise/nce-nrf:v2.8.0
      options: --workdir /workdir/nce
    defaults:
      run:
        working-directory: /workdir/nce
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: /workdir/nce

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: /workdir/artifacts

      - name: Create flattened zips per board
        run: |
          mkdir -p /workdir/zips
          for board_dir in /workdir/artifacts/*; do
            [ -d "$board_dir" ] || continue
            board=$(basename "$board_dir")
            ZIP_FILE="/workdir/zips/${board}.zip"
            echo "Creating $ZIP_FILE"

            TEMP_DIR=$(mktemp -d)
            for demo_dir in "$board_dir"/*; do
              [ -d "$demo_dir" ] || continue
              demo=$(basename "$demo_dir")
              cp "$demo_dir/zephyr.bin" "$TEMP_DIR/${demo}.bin"
            done

            (cd "$TEMP_DIR" && zip -r "$ZIP_FILE" .)
            rm -rf "$TEMP_DIR"
          done

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: /workdir/zips/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
